<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:local="clr-namespace:PassKeeper_WPF"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:cal="http://www.caliburnproject.org">

    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
    </Style>
    
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
    </Style>

    <Style x:Key="RoundedButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="15"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxStyle">
        <Setter Property="Control.BorderThickness" Value="01"/>
        <Setter Property="Control.FontSize" Value="15"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource ForegroundColor}"/>
        <Setter Property="Control.Padding" Value="5"/>
        <Setter Property="Control.Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="Control.IsFocused" Value="True">
                <Setter Property="Control.BorderBrush" Value="{DynamicResource PrimaryColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FilledButton" TargetType="Button">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackgroundColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                                CornerRadius="17">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NonFilledButton" TargetType="Button">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                                CornerRadius="17"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryBackgroundColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LoginWindowMainBorderStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Background" Value="{DynamicResource LoginWindowBackgroundGradient}">
        </Setter>
    </Style>

    <Style x:Key="MainBorderStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="7"/>
    </Style>

    <Style x:Key="NavigationMenuStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="7 7 0 0"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
    </Style>

    <Style x:Key="MainGridStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="0 0 7 7"/>
        <Setter Property="Background" Value="{DynamicResource MainWindowBackgroundColor}"/>
    </Style>

    <Style x:Key="MenuListViewStyle" TargetType="ListView">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
    </Style>

    <Style x:Key="MenuItemStyle" TargetType="ListViewItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0 0 0 15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Name="Border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MainListViewStyle" TargetType="ListView">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="Width" Value="188"/>
        <Setter Property="Height" Value="120"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
        <Setter Property="Margin" Value="0 20 20 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="IsSelected" Value="True"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="CardListViewItemDataTemplate" DataType="{x:Type local:IRecord}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            
            <TextBlock Foreground="{DynamicResource ForegroundColor}" FontWeight="Heavy" HorizontalAlignment="Center" Margin="10 15 10 10" Text="{Binding Title}"></TextBlock>
            <TextBlock Foreground="{DynamicResource ForegroundColor}" HorizontalAlignment="Center" Text="{Binding WebsiteName}" Margin="10 45 10 0"></TextBlock>
            
            <Border Grid.Row="1" Background="{DynamicResource AccentColor}" CornerRadius="0 0 5 5">
                <WrapPanel HorizontalAlignment="Center">
                    <ToggleButton HorizontalAlignment="Left" Margin="2" Width="30" Height="30" Style="{DynamicResource MaterialDesignActionToggleButton}"
                              ToolTip="{DynamicResource ToolTipFavorite}"
                              Background="Transparent"
                              IsChecked="{Binding IsFavorite}">
                        <ToggleButton.Content>
                            <md:PackIcon Kind="HeartBroken" Width="20" Height="20" Foreground="{DynamicResource PrimaryBackgroundColor}"/>
                        </ToggleButton.Content>
                        <md:ToggleButtonAssist.OnContent>
                            <md:PackIcon Kind="Heart" Width="20" Height="20" Foreground="{DynamicResource PrimaryBackgroundColor}"/>
                        </md:ToggleButtonAssist.OnContent>
                    </ToggleButton>
                    <Button Style="{DynamicResource MaterialDesignFloatingActionButton}"
                            Margin="2"
                            BorderBrush="Transparent"
                            ToolTip="{DynamicResource ToolTipCopyUsername}"
                            Foreground="{DynamicResource ForegroundColor}"
                            Width="30" Height="30" Background="Transparent"
                            Command="{Binding Path=DataContext.CopyUsernameCommand,
                                      RelativeSource={RelativeSource AncestorType={x:Type local:MainWindowView}}}">
                        <md:PackIcon
                            Kind="User"
                            Height="20"
                            Width="20" Foreground="{DynamicResource PrimaryBackgroundColor}"/>
                    </Button>
                    <Button Style="{DynamicResource MaterialDesignFloatingActionButton}"
                            Margin="2"
                            BorderBrush="Transparent"
                            ToolTip="{DynamicResource ToolTipCopyPassword}"
                            Foreground="{DynamicResource ForegroundColor}"
                            Width="30" Height="30" Background="Transparent"
                            Command="{Binding Path=DataContext.CopyPasswordCommand,
                                      RelativeSource={RelativeSource AncestorType={x:Type local:MainWindowView}}}">
                        <md:PackIcon
                            Kind="Onepassword"
                            Height="20"
                            Width="20" Foreground="{DynamicResource PrimaryBackgroundColor}"/>
                    </Button>
                    <Button Style="{DynamicResource MaterialDesignFloatingActionButton}"
                            ToolTip="{DynamicResource ToolTipDelete}"
                            Margin="5"
                            BorderBrush="Transparent"
                            Foreground="{DynamicResource ForegroundColor}"
                            Command="{Binding Path=DataContext.DeleteRecordCommand,
                                      RelativeSource={RelativeSource AncestorType={x:Type local:MainWindowView}}}"
                            CommandParameter=""
                            Width="30" Height="30" Background="Transparent">
                        <md:PackIcon
                            Kind="Delete"
                            Height="20"
                            Width="20" Foreground="{DynamicResource PrimaryBackgroundColor}"/>
                    </Button>
                </WrapPanel>
            </Border>
        </Grid>
    </DataTemplate>

    <Style TargetType="{x:Type ScrollBar}">
        <Style.Resources>
            <Style x:Key="PageScrollButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Fill="Transparent"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="VerticalThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="Transparent">
                                <Rectangle x:Name="Slider" RadiusX="2" RadiusY="2" Fill="#9E9E9E" Width="4" HorizontalAlignment="Right" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="12" DecelerationRatio="1" Storyboard.TargetName="Slider" Storyboard.TargetProperty="Width" Duration="0:0:0.10" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="12" DecelerationRatio="1" Storyboard.TargetName="Slider" Storyboard.TargetProperty="Width" Duration="0:0:0.10" />
                                                <DoubleAnimation To="4" AccelerationRatio="1" Storyboard.TargetName="Slider" Storyboard.TargetProperty="Width" BeginTime="0:0:0.15" Duration="0:0:0.25" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HorizontalThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="Transparent">
                                <Rectangle x:Name="Slider" Fill="#9E9E9E" Height="4" VerticalAlignment="Bottom" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="12" DecelerationRatio="1" Storyboard.TargetName="Slider" Storyboard.TargetProperty="Height" Duration="0:0:0.1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="4" DecelerationRatio="1" Storyboard.TargetName="Slider" Storyboard.TargetProperty="Height" Duration="0:0:0.25" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{DynamicResource PageScrollButton}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{DynamicResource PageScrollButton}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{DynamicResource VerticalThumbStyle}" />
                        </Track.Thumb>
                    </Track>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="12"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{DynamicResource PageScrollButton}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{DynamicResource PageScrollButton}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource HorizontalThumbStyle}" />
                                </Track.Thumb>
                            </Track>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="RadioButton" BasedOn="{StaticResource MaterialDesignRadioButton}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
        <Setter Property="Margin" Value="0 10 0 0"/>
        <Setter Property="FontWeight" Value="Light"/>
    </Style>

    <Style x:Key="MenuItemButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0 0 0 15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="Border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Storyboard x:Key="OpenAddRecordDialog">
        <DoubleAnimationUsingKeyFrames
                Storyboard.TargetProperty="Width"
                Storyboard.TargetName="AddRecordDialog">
            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="230"/>
        </DoubleAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility"
                                                    Storyboard.TargetName="AddRecordDialog">
            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="CloseAddRecordDialog">
        <DoubleAnimationUsingKeyFrames
                Storyboard.TargetProperty="Width"
                Storyboard.TargetName="AddRecordDialog">
            <EasingDoubleKeyFrame KeyTime="0" Value="230"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility"
                                                    Storyboard.TargetName="AddRecordDialog">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Hidden}"/>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="OpenEditRecordDialog">
        <DoubleAnimationUsingKeyFrames
                Storyboard.TargetProperty="Width"
                Storyboard.TargetName="EditRecordDialog">
            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="230"/>
        </DoubleAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility"
                                                    Storyboard.TargetName="EditRecordDialog">
            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="CloseEditRecordDialog">
        <DoubleAnimationUsingKeyFrames
                Storyboard.TargetProperty="Width"
                Storyboard.TargetName="EditRecordDialog">
            <EasingDoubleKeyFrame KeyTime="0" Value="230"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility"
                                                    Storyboard.TargetName="EditRecordDialog">
            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Hidden}"/>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>
</ResourceDictionary>